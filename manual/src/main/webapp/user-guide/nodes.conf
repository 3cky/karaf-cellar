h1. Cellar nodes

This chapter describes the Cellar nodes manipulation commands.

h2. Nodes identification

When you installed the Cellar feature, your Karaf instance became automatically a Cellar cluster node,
and hence tries to discover the others Cellar nodes.

You can list the known Cellar nodes using the list-nodes command:

{code}
karaf@node1> cluster:node-list
   ID                               Host Name              Port
* [vostro.local:5701             ] [vostro.local        ] [ 5701]
{code}

The starting * indicates that it's the Karaf instance on which you are logged on (the local node).

h2. Testing nodes

You can ping a node to test it:

{code}
karaf@node1> cluster:node-ping vostro.local:5701
PING vostro.local:5701
from 1: req=vostro.local:5701 time=67 ms
from 2: req=vostro.local:5701 time=10 ms
from 3: req=vostro.local:5701 time=8 ms
from 4: req=vostro.local:5701 time=9 ms
{code}

h2. Nodes sync

Cellar allows nodes to 'sync' state. It currently covers features, configs, and bundles.

For instance, if you install a feature (eventadmin for example) on node1:

{code}
karaf@node1> features:install eventadmin
karaf@node1> features:list|grep -i eventadmin
[installed  ] [2.3.1 ] eventadmin                    karaf-2.3.1
{code}

You can see that the eventadmin feature has been installed on node2:

{code}
karaf@node2> features:list|grep -i eventadmin
[installed  ] [2.3.1 ] eventadmin                    karaf-2.3.1
{code}

Features uninstall works in the same way. Basically, Cellar synchronisation is completely transparent.

Configuration is also synchronized.
